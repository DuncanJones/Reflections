When would you want to use a remote repository rather than keeping all your work local?
When you are working with multiple people or across multiple machines / locations
When you want to share your work with others
As a way to back-up your work

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Changes may be made to remote that you don't want on your local copy
This would be especially true if more than one person was working on the remote

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork is a clone on the GitHub - I use this when I want to create a remote copy of a repository already on GitHub
Clone creates a copy of a repository - I use this when I want to create a copy of a repository on my machine but not share it
Branch creates a new branch in the repository already on my machine / the GitHub - I use this to work on two changes at once or to work on an idea away from my core project

What is the benefit of having a copy of the last known state of the remote stored locally?
It allows you to identify changes made locally and those made on the remote copy after the local copy was created

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would share files by email or through a central network
It would be simpler to understand what was going on
It would be harder to look back at what happened
It would be harder to merge to seperate changes

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
You make changes in a seperate branch if you are working on something away from the core project
It is also needed to create a pull request when colaberating with others